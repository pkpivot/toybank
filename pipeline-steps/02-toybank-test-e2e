pipeline {
  parameters {
    string(name: 'PRODUCTION_IMAGE', defaultValue: env.DH_IMAGE_NAME + ':' + env.DH_IMAGE_TAG)
  }
  agent any
   stages {
    stage('run-tests') {
      steps {
        withCredentials([sshUserPrivateKey(credentialsId: 'git_automation', keyFileVariable: 'SSH_FILE')]) {
            sh '''
                        export GIT_SSH_COMMAND="ssh -i $SSH_FILE -o StrictHostKeyChecking=no"
                        git clone git@github.com:pkpivot/toybank.git
              '''
        }
        withCredentials([kubeconfigFile(credentialsId: 'minikube-config', variable: 'KUBECONFIG')]) {
            sh ''' 
                export DH_IMAGE=$DH_IMAGE_NAME:$DH_IMAGE_TAG
                echo IMAGE = $DH_IMAGE
                cd toybank/k8s
                ytt -f toybank-config-template.yaml -f toybank-deploy-template.yaml  -f toybank-service-template.yaml -f schema.yaml  -v image=$DH_IMAGE -v metadata.namespace=test -v data.databaseUrl=jdbc:postgresql://host.minikube.internal:5432/dev --output-files test
                kubectl apply -f test/.
                export PRODUCTION_IMAGE=$DH_IMAGE
            '''

        }
        withCredentials([usernamePassword(credentialsId: 'test-db-credentials', usernameVariable: 'DATABASE_USER', passwordVariable: 'DATABASE_PASSWORD')]) {
            // This is the URL for a database running on the host of a minikube cluster. 
            // You need to change it for your installation
            withEnv(['DATABASE_URL=jdbc:postgresql://host.minikube.internal:5432/dev']) {
                withMaven(
                    maven: 'maven-3-8',
                    mavenLocalRepo: '.repository'
                    ) {
                   sh '''
                   cd toybank
                   mvn package -Dtest=ToyBankApplicationE2E
                   '''
               }
            }

        }
      }
    }
  }
  post {
    success {
                // propagate: disabled so that Success / fail of deployment
                // does not determine success fail of end to end tests
                build job: '03-toybank-deploy', propagate: false, parameters: [string(name: 'DH_IMAGE', value: env.DH_IMAGE_NAME + ':' + env.DH_IMAGE_TAG)]
            }
    failure  {
        // Mail out build failure
        echo "End to end testing failed"
    }
  }
}